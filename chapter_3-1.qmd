# 3.1 Smart Remote Control Door {.unnumbered}
<br />
In everyday life, privacy and security are matters of great concern to everyone. In recent years, the doors of residential areas have become increasingly smart, only accessible through electronic keys or passwords, preventing outsiders from gaining entry. In public areas or parking lot entrances, having a smart remote control to operate doors could facilitate the work of security personnel. A simple smart remote control door can be implemented using an infrared transmitter and an infrared receiver, which sends and receives infrared signals to open and close the door. In this section, we will build such a smart remote control door. 

## 3.1.1 Background Knowledge 

### 3.1.1.1 Infrared Receivers and Transmitters 

An infrared receiver is used to receive infrared signals, and is also used for remote control detection. The infrared receiver has an infrared detector for picking up the infrared light emitted by the infrared transmitter. The [Grove - IR Infrared Receiver Module](https://www.seeedstudio.com/Grove-Infrared-Receiver.html?queryID=07158d4ed1af8b12bb25a91e2bf51431&objectID=2247&indexName=bazaar_retailer_products) has a range of 10 meters; signals cannot be received beyond this effective range. Generally, the infrared receiver and infrared transmitter work together. 

<!-- ![Grove - IR Infrared Receiver Module](https://cdn.nlark.com/yuque/0/2021/jpeg/2746511/1614740243010-49d75ada-b1df-46fa-9bb8-dfc240843ba3.jpeg#averageHue=%23e3e5dc&height=197&id=aFdnO&originHeight=811&originWidth=1023&originalType=binary&ratio=1&rotation=0&showTitle=true&size=0&status=done&style=none&title=Grove%20-%20IR%20Infrared%20Receiver%20Module&width=249 "Grove - IR Infrared Receiver Module")  -->

<div style="text-align:center;"><img src="https://files.seeedstudio.com/wiki/XIAO_Big_Power-Board-ebook-photo/chapter_3-1/chapter_3-1_1.jpg" width="300" height="auto" style="margin:0 auto" /><br /><sub>Grove - IR Infrared Receiver Module</sub></div>
<br />

An infrared transmitter is a type of remote control device with a remote control function. It emits light through an infrared emission tube within a certain range, thereby achieving control signal functions. The remote controls we use to control TVs, air conditioners, and car doors in daily life are infrared transmitters. Common infrared transmitters include modular ones like the [Grove - Infrared Emitter Module](https://www.seeedstudio.com/Grove-Infrared-Emitter.html?queryID=371d0912a7af3a54dbafe9aa92839339&objectID=2248&indexName=bazaar_retailer_products), as well as regular remote controls, each with corresponding usage scenarios and methods. For our smart remote control door, we will be using an infrared remote control. 

<!-- ![Grove - Infrared Emitter Infrared Transmitter Module](https://cdn.nlark.com/yuque/0/2021/jpeg/2746511/1614759285351-23e174e0-2e67-40ab-bc12-a2561e41753d.jpeg#averageHue=%23f9f8f7&height=298&id=EC3A2&originHeight=474&originWidth=563&originalType=binary&ratio=1&rotation=0&showTitle=true&size=63755&status=done&style=none&title=Grove%20-%20Infrared%20Emitter%20Infrared%20Transmitter%20Module&width=354 "Grove - Infrared Emitter Infrared Transmitter Module") -->
<div style="text-align:center;"><img src="https://files.seeedstudio.com/wiki/XIAO_Big_Power-Board-ebook-photo/chapter_3-1/chapter_3-1_2.jpg" width="400" height="auto" style="margin:0 auto" /><br /><sub>Grove - Infrared Emitter Infrared Transmitter Module</sub></div>


<div style="text-align:center;"><img src="https://files.seeedstudio.com/wiki/XIAO_Big_Power-Board-ebook-photo/chapter_3-1/chapter_3-1_3.jpg" width="400" height="auto" style="margin:0 auto" href="https://www.seeedstudio.com/XIAO-ESP32S3-Sense-p-5639.html"/><br /><sub>Grove - Infrared Emitter Infrared Transmitter Module</sub></div>

<br />
To explain simply, the principle of infrared transmission and reception is that the infrared transmitter inputs the signal, amplifies it, and sends it through the infrared transmission tube. The infrared receiver then receives this infrared signal, amplifies it and converts it back to an electrical signal, thereby realizing infrared control.

## 3.1.2 Task 1: Reading Remote Control Key Codes

#### **Adding the [Arduino-IRremote](https://github.com/Arduino-IRremote/Arduino-IRremote) Library File**

Before we begin programming the Grove - IR Infrared Receiver with the Arduino IDE, we need to add the necessary library files. Enter the library file address üîó <https://github.com/Arduino-IRremote/Arduino-IRremote> in your browser address bar, go to the GitHub page, and click `Code‚ÜíDownload ZIP` to download the resource package `Arduino-IRremote-master.zip` to your local machine, as shown in the image below: 

<!-- ![image.png](https://cdn.nlark.com/yuque/0/2022/png/2392200/1669615819680-87e00c64-d502-4e72-9c54-b4f09a367227.png#averageHue=%23a8b39a&clientId=ud4a80bec-5aae-4&from=paste&height=888&id=XXjdT&originHeight=1776&originWidth=2602&originalType=binary&ratio=1&rotation=0&showTitle=false&size=721562&status=done&style=stroke&taskId=ud4c71a55-247f-46b1-bbcd-8a85eb0dd97&title=&width=1301)  -->
![](https://files.seeedstudio.com/wiki/XIAO_Big_Power-Board-ebook-photo/chapter_3-1/chapter_3-1_4.png)

Add the resource package `Arduino-IRremote-master.zip` you just downloaded through `Sketch‚ÜíInclude Library‚ÜíAdd .ZIP Library` in the Arduino IDE menu bar until you see a message indicating successful library loading. 

#### **Open the Example File **

If you want to control other devices through the infrared remote control, such as pressing the left key on the mini infrared remote control to rotate the servo to the left, or pressing the right key to rotate the servo to the right, you first need to know what kind of code each key on the remote control will emit. This way, you can set it through the program. But how do you read the codes of different keys on the remote control? You can use the `IRremote` library and open the `IRrecvDemo` example via the following path: `**File‚ÜíExamples‚ÜíIRremote‚ÜíReceiveDemo**`. This example program can read the key codes of the remote control, but some parameters need to be modified: <br />
`**int RECV_PIN = 7**`, change the number according to the hardware connection pin. We have connected the infrared receiver to pin 7. Next, we select useful code. We only need to define the header file and the part that reads the remote control key codes. After reducing, the program is as follows:

``` cpp
#include <Arduino.h>
#include <IRremote.h>

const byte IR_RECEIVE_PIN=7; // The infrared receiver is connected to pin 7. If you are using XIAO RP2040/XIAO ESP32, please change 7 to A0

void setup() {
    Serial.begin(115200);
    Serial.println(F("Enabling IRin"));
    IrReceiver.begin(IR_RECEIVE_PIN,ENABLE_LED_FEEDBACK); // Start infrared decoding
    Serial.print(F("Ready to receive IR signals at pin "));
    Serial.println(IR_RECEIVE_PIN);
    delay(1000);
}

void loop() {
    if (IrReceiver.decode()) // Decode successfully, receive a set of infrared signals
   {
      Serial.println(IrReceiver.decodedIRData.command, HEX); // Output infrared decoding result (hexadecimal)
      Serial.println(IrReceiver.decodedIRData.command); // Output infrared decoding result (octal)
      IrReceiver.resume(); // Receive the next set of values
   }
}
```

> Get this program from Github <br />
> <https://github.com/mouseart/XIAO-Mastering-Arduino-and-TinyML/tree/main/code/L11_IRrecvDemo_en>

The infrared receiver module is connected to the port 7, as shown in the following figure: 

<!-- ![image.png](https://cdn.nlark.com/yuque/0/2021/png/2746511/1616046021265-4edd3d68-cb9c-4ded-8562-fb9123b41c72.png#averageHue=%23f0cb4e&height=349&id=T4PAR&originHeight=907&originWidth=1644&originalType=binary&ratio=1&rotation=0&showTitle=false&size=126576&status=done&style=none&title=&width=633) -->
![](https://files.seeedstudio.com/wiki/XIAO_Big_Power-Board-ebook-photo/chapter_3-1/chapter_3-1_5.png)


> ‚ö†Ô∏è Note: <br />
> If you are using XIAO RP2040/XIAO ESP32, please change `7` to `A0`.

After the code is uploaded, open the serial monitor, aim the remote control at the black component of the infrared receiver at a close distance, press any key, and observe the characters output by the serial monitor. The hexadecimal code appears in the first line, and the octal code appears in the second line. The two lines form one group, representing one key. Please note that if you press the key for too long, "FFFFFFFF" will appear, and this line of code and the numeric code below are invalid. 

<!-- ![L11-‰ºÅ‰∏öÂæÆ‰ø°20230529-093358\@2x.png](https://cdn.nlark.com/yuque/0/2023/png/2392200/1685324062734-87940708-2b64-4156-adf5-fec957a2d4c0.png#averageHue=%23cc9061&clientId=ueb14e430-274d-4&from=ui&id=ud7719213&originHeight=1490&originWidth=2304&originalType=binary&ratio=2.5&rotation=0&showTitle=false&size=371474&status=done&style=none&taskId=u37c0a98a-b8cf-4792-ba0e-3a2ef7a9bac&title=)  -->
![](https://files.seeedstudio.com/wiki/XIAO_Big_Power-Board-ebook-photo/chapter_3-1/chapter_3-1_6.png)


> ‚ö†Ô∏è Note: Different remote controls may give different values.

## 3.1.3 Project Creation: Smart Remote Door

### Project Description

How can we recreate a smart remote control door? With a remote control and an infrared receiver, the next step is to control the opening and closing of the door. Recall how the remote control doors in our life work? When the remote control is pressed, the door slowly opens. When it opens to a certain angle, it slowly closes. We can use a servo to control the rotation of the door. When closing the door, the servo rotates from 90¬∞ to 0¬∞. When opening the door, the servo rotates from 0¬∞ to 90¬∞. By transmitting the signals to open and close the door with a remote control, we can implement the function of a smart remote control door.

### Program Writing

To control the rotation of the servo with an infrared remote control, you need to follow these steps:

-   Declare the `IRremote` library and `Serve` library to be called, and define variables.
-   Initialize the library files, initialize the servo.
-   Read the infrared decoding result and control the rotation of the servo according to the instructions to the left and right.

### Task 2: Control the Rotation of the Servo with an Infrared Remote Control

**Step 1:** Declare the `IRremote` library and `Serve` library to be called, and define variables.

``` cpp
#include <IRremote.h>
#include <Servo.h>

Servo myservo; // Create a servo object myservo to control the servo
int RECV_PIN = 7; // The infrared receiver is connected to pin 7. If you are using XIAO RP2040/XIAO ESP32, please change 7 to A0
IRrecv irrecv(RECV_PIN); // Define an IRrecv object to receive infrared signals
decode_results results; // Decoding results are placed in results

int pos = 90; // Define pos as 90¬∞
```

**Step 2:** Initialize the library files, initialize the servo.

``` cpp
void setup()
{
    Serial.begin(9600);
    Serial.println("Enabling IRin");  
    irrecv.enableIRIn(); 
    myservo.attach(5); // Connect the servo on pin 5 to myservo. If you are using XIAO RP2040/XIAO ESP32, please change 5 to D5
}
```

**Step 3:** Read the infrared decoding result and control the rotation of the servo according to the instructions to the left and right. If you have questions about the program, you can refer to the comment section. 

> ‚ö†Ô∏è Note: 
> In the example, the infrared signal value of the right key `16761405`, and the infrared signal value of the left key `16712445`, need to be replaced by the values obtained from the "Read Remote Control Key Code" example using the remote control in your hand. Otherwise, there will be no response after pressing the key.

``` cpp
void loop() {
    if (irrecv.decode(&results)) {  // If decoding is successful, a set of infrared signals is received
        if (results.value == 16761405) {  // If the received signal is 16761405 (right key)
            for (pos; pos <= 89; pos += 1) { // Then the servo is incremented from 0¬∞ to 90¬∞ in sequence
                myservo.write(pos);              // Write the rotation angle value to the servo pin
                delay(40);
                // The following is to interrupt the above instruction and exit the loop
                if (irrecv.decode(&results)) {  
                    irrecv.resume();
                    if (results.value == 16712445)  
                        break;
                }
            }
        }

        if (results.value == 16712445) {    // If the received signal is 16712445 (left key)
            for (pos; pos >= 1; pos -= 1) { // Then the servo is decremented from 90¬∞ to 0¬∞ in sequence
                myservo.write(pos);              // Write the rotation angle value to the servo pin
                delay(40);                       
                // The following is to interrupt the above instruction and exit the loop
                if (irrecv.decode(&results)) {
                    irrecv.resume();
                    if (results.value == 16761405)
                        break;
                }
            }
        }
        // Display hexadecimal and octal codes in the serial port
        Serial.println(pos);
        Serial.println(results.value, HEX);
        Serial.println(results.value);
        irrecv.resume();                    

    }
    delay(100);
}
```

Complete program details:

``` cpp
#include <IRremote.h>
#include <Servo.h>

Servo myservo; // Create a servo object myservo to control the servo
int RECV_PIN = 7; // The infrared receiver is connected to pin 7. If you are using XIAO RP2040/XIAO ESP32, please change 7 to A0
IRrecv irrecv(RECV_PIN); // Define an IRrecv object to receive infrared signals
decode_results results; // Decoding results are placed in results

int pos = 90; // Define pos as 90¬∞

void setup()
{
    Serial.begin(9600);
    Serial.println("Enabling IRin");  
    irrecv.enableIRIn(); 
    myservo.attach(5); // Connect the servo on pin 5 to myservo. If you are using XIAO RP2040/XIAO ESP32, please change 5 to D5
}

// Note: Left 16712445 Right 16761405, please replace with the key values read from your own remote control
void loop() {
    if (irrecv.decode(&results)) {  // If decoding is successful, a set of infrared signals is received
        if (results.value == 16761405) {  // If the received signal is 16761405 (right key)
            for (pos; pos <= 89; pos += 1) { // Then the servo is incremented from 0¬∞ to 90¬∞ in sequence
                myservo.write(pos);              // Write the rotation angle value to the servo pin
                delay(40);
                // The following is to interrupt the above instruction and exit the loop
                if (irrecv.decode(&results)) {  
                    irrecv.resume();
                    if (results.value == 16712445)  
                        break;
                }
            }
        }

        if (results.value == 16712445) {    // If the received signal is 16712445 (left key)
            for (pos; pos >= 1; pos -= 1) { // Then the servo is decremented from 90¬∞ to 0¬∞ in sequence
                myservo.write(pos);              // Write the rotation angle value to the servo pin
                delay(40);                       
                // The following is to interrupt the above instruction and exit the loop
                if (irrecv.decode(&results)) {
                    irrecv.resume();
                    if (results.value == 16761405)
                        break;
                }
            }
        }
        // Display hexadecimal and octal codes in the serial port
        Serial.println(pos);
        Serial.println(results.value, HEX);
        Serial.println(results.value);
        irrecv.resume();                    

    }
    delay(100);
}
```

> Get this program from Github <br />
> <https://github.com/mouseart/XIAO-Mastering-Arduino-and-TinyML/tree/main/code/L11_IR_Servo_ino_XIAO_en>

**Step 4:** Connect the hardware and upload the program. First, connect the infrared receiving module to the 7th interface of the XIAO expansion board, and connect the servo to the I2C interface, as shown in the figure below: 

<!-- ![image.png](https://cdn.nlark.com/yuque/0/2021/png/2746511/1616046769231-58c746e3-95a2-4789-84e8-a0f90221ed61.png#averageHue=%23dcd8d4&height=1086&id=jbAWa&originHeight=1086&originWidth=2000&originalType=binary&ratio=1&rotation=0&showTitle=false&size=221872&status=done&style=none&title=&width=2000)  -->
![](https://files.seeedstudio.com/wiki/XIAO_Big_Power-Board-ebook-photo/chapter_3-1/chapter_3-1_7.png)


> ‚ö†Ô∏è Note: <br />
> If you are using XIAO RP2040, please connect the infrared receiving module to the `A0` interface.

Connect XIAO to the computer with a data cable, click the "Upload" button, upload the program to the hardware, and when the debug area shows "Upload Successful", open the serial monitor, aim the remote control at the infrared receiver, press the "Left" key and the "Right" key, observe the rotation of the servo, and check the encoding information output by the serial monitor. 

## 3.1.4 Exterior Design 

In this unit, we need to implement a more complete project, combining the functions implemented by the program, the modules, and the appearance of the structure to form a prototype. Going back to the smart remote control door project, we need to control the rotation of the servo through the remote control, simulate the opening and closing of the door. When making the appearance, we need to focus on the following issues:

-   How to combine the servo and the door panel to make the rotation of the servo drive the rotation of the door panel.
-   The infrared receiver should be exposed in a conspicuous position, without any cover.
-   Whether the main control, expansion board, and connecting wires are covered to keep the appearance neat.
-   How to make the work stand steadily.

The figure below provides an appearance case, which is laser cut from basswood, and provides cutting files for reference. If you can use drawing software, you can process and design it yourself. If you don't have a laser cutting machine, you can also use corrugated paper, cardstock, non-woven fabric, and other handmade materials to make it, which tests your hands-on ability more. 

<!-- ![ADR.jpg](https://cdn.nlark.com/yuque/0/2021/jpeg/2746511/1617260228306-50b819ae-70e4-40fb-9d32-7fcc7c44d757.jpeg#averageHue=%23fefefe&height=608&id=Xwxcw&originHeight=608&originWidth=2482&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1258414&status=done&style=none&title=&width=2482) -->
![](https://files.seeedstudio.com/wiki/XIAO_Big_Power-Board-ebook-photo/chapter_3-1/chapter_3-1_8.jpg)


Download files for use with a laser cutter üîó <br />
<https://github.com/mouseart/XIAO-Mastering-Arduino-and-TinyML/blob/main/dxf/XIAO_ADR.dxf>. 

<!-- ![L11(1)(2).jpg](https://cdn.nlark.com/yuque/0/2021/jpeg/2746511/1616468195911-f9c0facd-5b57-468b-9a59-20072972d362.jpeg#averageHue=%23e0dcd0&height=398&id=ddWpA&originHeight=3024&originWidth=4032&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1174771&status=done&style=none&title=&width=530)  -->
![](https://files.seeedstudio.com/wiki/XIAO_Big_Power-Board-ebook-photo/chapter_3-1/chapter_3-1_9.jpg)


<!-- ![1L11(3).jpg](https://cdn.nlark.com/yuque/0/2021/jpeg/2746511/1617343247427-95ad067c-a206-49f6-a422-1a934012a437.jpeg#averageHue=%23cfc7b8&height=356&id=GpoVn&originHeight=3024&originWidth=4032&originalType=binary&ratio=1&rotation=0&showTitle=false&size=3159560&status=done&style=none&title=&width=475)  -->
![](https://files.seeedstudio.com/wiki/XIAO_Big_Power-Board-ebook-photo/chapter_3-1/chapter_3-1_10.jpg)


<!-- ![](https://cdn.nlark.com/yuque/0/2021/jpeg/2746511/1617343284494-6409b655-aad6-4b2c-9a45-4f88ee7cfc79.jpeg#averageHue=%23d3cabc&height=369&id=ShfS4&originHeight=3024&originWidth=4032&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=&width=492)  -->
![](https://files.seeedstudio.com/wiki/XIAO_Big_Power-Board-ebook-photo/chapter_3-1/chapter_3-1_11.jpg)


<!-- ![1L11(4).jpg](https://cdn.nlark.com/yuque/0/2021/jpeg/2746511/1617343459383-d3012574-80f6-4d74-ae33-5e50bf719156.jpeg#averageHue=%23cec6b8&height=365&id=lFA7j&originHeight=3024&originWidth=4032&originalType=binary&ratio=1&rotation=0&showTitle=false&size=3067635&status=done&style=none&title=&width=486) -->
![](https://files.seeedstudio.com/wiki/XIAO_Big_Power-Board-ebook-photo/chapter_3-1/chapter_3-1_12.jpg)
